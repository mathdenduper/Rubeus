name: Build Rubeus

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch: # Allow manual trigger via GitHub UI

jobs:
  build:
    runs-on: windows-latest # Use the latest Windows runner

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up .NET Core SDK
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: '5.0' # Specify the .NET SDK version (adjust if necessary)
        
    - name: Check if .NET Framework Developer Pack is Installed
      id: check-devpack
      run: |
        if (Test-Path "C:\Program Files (x86)\Reference Assemblies\Microsoft\Framework\.NETFramework\v4.8.1") {
          echo "installed=true" >> $env:GITHUB_ENV
        } else {
          echo "installed=false" >> $env:GITHUB_ENV
        }
      shell: pwsh

    - name: Install .NET Framework 4.8.1 Developer Pack
      if: env.installed == 'false'
      run: |
        curl -Lo NDP481-DevPack-ENU.exe https://go.microsoft.com/fwlink/?linkid=2203306
        Start-Process -FilePath "NDP481-DevPack-ENU.exe" -ArgumentList "/q" -Wait
      shell: pwsh

    - name: Install Chocolatey
      run: |
        Set-ExecutionPolicy Bypass -Scope Process -Force
        [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072
        iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))
      shell: pwsh

    - name: Install Visual Studio Build Tools
      run: |
        choco install visualstudio2019-buildtools -y --version=16.11.10
        refreshenv
      shell: cmd

    - name: Restore NuGet packages
      run: dotnet restore Rubeus.sln # Restore dependencies

    - name: Build Rubeus
      run: dotnet build Rubeus.sln -c Release # Build the project in Release mode

    - name: Publish Rubeus.exe
      run: dotnet publish Rubeus.sln -c Release -r win-x64 --self-contained false -o publish # Publish the executable

    - name: Upload Rubeus.exe as Artifact
      uses: actions/upload-artifact@v3 # Use version v3 of the upload-artifact action
      with:
        name: Rubeus
        path: publish/Rubeus.exe # Upload the built executable as an artifact
